#3.2.1 机器级代码
正如在 1.9.3 节中讲过的那样，计算机系统使用了多种不同形式的抽象，利用更简单 的抽象模型来隐藏实现的细节。对于机器级编程来说，其中两种抽象尤为重要。
## 抽象模型
#d 指令集架构
第一种是 由指令集体系结构或指令集架构（Instruction Set Architecture, ISA)来定义机器级程序的 格式和行为，它定义了处理器状态、指令的格式，以及每条指令对状态的影响。大多数 ISA来包括 x86-64, 将程序的行为描述成好像每条指令都是按顺序执行的，一条指令结束 后，下一条再开始。处理器的硬件远比描述的精细复杂，它们并发地执行许多指令，但是可 以采取措施保证整体行为与 ISA 指定的顺序执行的行为完全一致。

处理器执行指令。指令集架构是用来控制处理器的执行方式的。

重要概念 处理器 指令集 并发 

#d 内存模型
机器级程序使用的内存地址是`虚拟地址`，
内存模型: 看上去是一个非常大的字节数组。

数组是一种容器，我们用数组这个容器来装载字节。

存储器系统的实际实现是将多个硬件存储器和操作系统软件组合起来，这会在第 9 章中讲到。

这些指令性材料太抽象了，又没有实例，看不懂很正常。这算是前置引用了。

#d 编译顺序
在整个编译过程中，编译器会完成大部分的工作，将把用 C 语言提供的相对比较抽象的 执行模型表示的程序转化成处理器执行的非常基本的指令。

高级语言转换成处理器能够执行的指令。因为最终所有的操作都是处理器去执行，处理器CPU是核心，相当于人类的大脑。所以最终的目的都是让处理器去执行那些操作。

#c q 理解汇编语言的重要性
汇编代码表示非常接近于机器代码。与机器代码的二进制格式相比，汇编代码的主要特点是它用可读性更好的文本格式表示。 能够理解汇编代码以及它与原始 C 代码的联系，是理解计算机如何执行程序的关键一步。 

这里都没有实例，看不太懂的。这也是我的验收标准。理解汇编语言与c代码之间的差异与共性。

## 差异性 巨大
X86-64 的机器代码和原始的 C 代码差别非常大。一些通常对 C 语言程序员隐藏的处理器状态都是可见的. 

不太懂这句话，是啥意思。
#d 程序计数器
1. 程序计数器（通常称为"PC" 在 x86-64 中用％riP 表示）给出将要执行的下一条指令在内存中的地址
#d 整数寄存器
作用:
2. 整数寄存器文件包含 16 个命名的位置，分别存储 64 位的值。这些寄存器可以存储【地址】(对应于 C 语言的指针)或【整数数据】。


有的寄存器被用来记录某些重要的【程序状态】，而其他的寄存器用来保存【临时数据】，例如过程的参数和局部变量，以及函数的返回值.

他只是简单的告诉你下，他的作用。并没有实例代码，真不好理解。


#d 条件码寄存器
保存着最近执行的算术或逻辑指令的状态信息。它们用来实现控制或
数据流中的条件变化，比如说用来实现 if 和 while 语句。


#d 一组向量寄存器可以存放一个或多个整数或浮点数值



### 数据类型差异
虽然 C 语言提供了一种模型，可以在内存中声明和分配各种数据类型的对象.
#d 内存看待
但是机器代码只是简单地将内存看成一个很大的、按字节寻址的数组。

#d 数据类型单一
C 语言中的聚合数据类型，例 如数组和结构，在机器代码中用一组连续的字节来表示。即使是对标量数据类型，汇编代码也不区分有符号或无符号整数，不区分各种类型的指针，甚至于不区分指针和整数。 


#d 程序内存
程序内存包含：程序的可执行机器代码，操作系统需要的一些信息，用来管理过程调用和返回的运行时栈，以及用户分配的内存块（比如说用 malloc 库函数分配的）。 



正如前 面提到的，程序内存用虚拟地址来寻址。在任意给定的时刻，只有有限的一部分虚拟地址 被认为是合法的。例如，X86-64 的虚拟地址是由 64 位的字来表示的。在目前的实现中， 这些地址的高 16 位必须设置为 0, 所以一个地址实际上能够指定的是 248 或 64TB 范围内 的一个字节。较为典型的程序只会访问几兆字节或几千兆字节的数据。操作系统负责'管理 虚拟地址空间，将虚拟地址翻译成实际处理器内存中的物理地址。 

### 机器指令 单一性
一条机器指令只执行一个非常基本的操作。例如，将存放在寄存器中的两个数字相加， 在存储器和寄存器之间传送数据，或是条件分支转移到新的指令地址。编译器必须产生这些 指令的序列，从而实现(像算术表达式求值、循环或过程调用和返回这样的)程序结构.




##自我验证

###总结整理
首先需要罗列核心知识点与子知识点把。


#3.2.2 代码示例

学习这章，光看书肯定不行。需要自己写汇编语言与理解汇编语言。所以我现在需要一个编译环境。
问问沈璜老师和李骏老师。

老师打扰了，win10环境下，编译汇编语言。
c语言可以编译汇编语言。


我现在有两个方法。
1. 学习Linux系统的基本操作方法。在Linux中进行编译。
2. 下载Gcc。
3. vscode能否编译汇编语言。这个我需要查一下。查哪里，官方文档。